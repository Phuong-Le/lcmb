/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/lcmb -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/
singularity {
    enabled = true
    autoMounts = true
    cacheDir = params.image_cachedir
    runOptions = '--cleanenv --no-home'
}

process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h'
    ]

    withName: conpairPileup {
        module = 'gatk-4.5.0.0'
    }
    withName: verifyConcordance {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: conpairContamination {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: conpairFilter {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: conpairConcordanceUnmatchFilter {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: conpairContaminationUnmatchFilter {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: hairpinAnnotation {
        // container = '/software/CASM/singularity/hairpin2/.hairpin2-deps.sif'
        container = '/software/CASM/singularity/hairpin2/.hairpin2-3.0.0-rc0'
    }
    withName: lcmbVcfilter {
        module = ['vcfilter/1.0.4', 'tabix/1.18']
    }
    withName: getChromCgpVaf {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: cgpVafChrom {
        container = "/software/CASM/singularity/vafcorrect/vafcorrect_5.7.2.sif"
    }
    withName: cgpVafConcat {
        container = "/software/CASM/singularity/vafcorrect/vafcorrect_5.7.2.sif"
    }
    withName: cgpVaf {
        container = "/software/CASM/singularity/vafcorrect/vafcorrect_5.7.2.sif"
    }
    withName: betaBinomFilterIndex {
        container = 'phuongle2510/lcm_r:0.1.1'
    }
    withName: betaBinomFilterIndexUnmatch {
        container = 'phuongle2510/lcm_r:0.1.1'
    }
    withName: betaBinomFilter {
        module = 'tabix/1.18'
    }
    withName: matrixGeneratorSamples {
        container = 'phuongle2510/sigprofiler_matrixgenerator:1.3.21'
    }
    withName: spectraPlottingSamples {
        container = 'phuongle2510/sigprofiler_plotting:1.3.24'
    }
    withName: getPhylogeny {
        container = 'phuongle2510/lcm_phylogeny:0.1.1'
    }
    withName: matrixGeneratorBranches {
        container = 'phuongle2510/sigprofiler_matrixgenerator:1.3.21'
    }
    withName: concatMatrices {
        container = 'phuongle2510/lcm_py:0.1.1'
    }
    withName: spectraPlottingBranches {
        container = 'phuongle2510/sigprofiler_plotting:1.3.24'
    }
    withName: mutToTree {
        container = 'phuongle2510/lcm_phylogeny:0.1.1'
    }
}

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input  = params.pipelines_testdata_base_path + 'viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv'

    // Genome references
    genome = 'R64-1-1'
}
